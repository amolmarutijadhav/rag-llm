[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rag-llm"
version = "1.0.0"
description = "A RAG (Retrieval-Augmented Generation) API for document Q&A"
authors = [{name = "Your Name", email = "your.email@example.com"}]
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "fastapi>=0.68.0",
    "uvicorn>=0.15.0",
    "pydantic>=2.0.0",
    "httpx>=0.24.0",
    "python-multipart>=0.0.5",
    "python-dotenv>=0.19.0",
    "openai>=1.0.0",
    "qdrant-client>=1.0.0",
    "langchain>=0.1.0",
    "langchain-openai>=0.1.0",
    "langchain-community>=0.1.0",
    "pypdf>=3.0.0",
    "python-docx>=0.8.11",
    "pytesseract>=0.3.10",
    "Pillow>=9.0.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--cov=app",
    "--cov-config=.coveragerc",
    "--cov-report=term-missing"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end tests",
    "api: marks tests as API tests",
    "rag: marks tests as RAG tests",
    "document_upload: marks tests as document upload tests",
    "ocr: marks tests as OCR tests",
    "ocr_integration: marks tests as OCR integration tests",
    "ocr_performance: marks tests as OCR performance tests",
    "real_ocr: marks tests as real OCR tests",
    "ocr_batch: marks tests as OCR batch processing tests",
    "ocr_accuracy: marks tests as OCR accuracy tests",
    "file_upload: File upload e2e tests",
    "ocr_workflow: OCR workflow e2e tests",
    "document_processing: Document processing workflow tests",
    "workflow: Complete workflow tests"
]
asyncio_mode = "auto"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
] 